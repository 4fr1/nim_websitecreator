#? stdtmpl | standard
#
#template `%`(idx: untyped): untyped =
#  row[idx]
#end template
#
#
#
#
#  
#proc genEditBlog(c: var TData, blogid: string): string =
# result = ""
#
# let pageData = getAllRows(db, sql"SELECT standardhead, head, standardnavbar, navbar, description, standardfooter, footer, name, url, status FROM blog WHERE id = ?", blogid)

# if pageData.len() > 0:
#   for page in pageData:
<div id="blogData">
  <form class="standard page" method="post" action="/blogpage/update">
    <input name="blogid" value="$blogid" style="display: none" />
    <div id="save" data-ischanged="0" style="display: none;"></div>

    <div id="blogHeader">
      <h1>Edit blog post</h1>
      <div>
        <div style="max-width: 300px;">
          <div class="input-group input-group-sm actAddItem">
            <div class="input-group-prepend">
              <span class="input-group-text actAddItemLabel" style="width: 80px;">
                  Name
              </span>
            </div>
            <input id="name" name="name" class="form-control" required value="${page[7]}"> 
          </div>
          <div class="input-group input-group-sm actAddItem">
            <div class="input-group-prepend">
              <span class="input-group-text actAddItemLabel" style="width: 80px;">
                  URL
              </span>
            </div>
            <input id="url" name="url" class="form-control" required placeholder="eg. 2018/11/name" value="${decodeUrl(page[8])}"> 
          </div>
          <div class="input-group input-group-sm actAddItem">
            <div class="input-group-prepend">
              <span class="input-group-text actAddItemLabel" style="width: 80px;">
                  Status
              </span>
            </div>
            <select id="status" name="status" class="form-control form-control-sm">
              <option value="0" ${statusIntToCheckbox(page[9], "0")}>Development</option>
              <option value="1" ${statusIntToCheckbox(page[9], "1")}>Private</option>
              <option value="2" ${statusIntToCheckbox(page[9], "2")}>Public</option>
            </select>
          </div>
          <div>
            <button type="button" class="btn btn-success blogSave">Save</button>
            <button type="button" class="btn btn-secondary blogOptions">Options</button>
            <a href="/blog/${page[8]}" class="btn btn-secondary">View blog</a>
          </div>
        </div>
        <div class="blogOptions">
          
          ${genPageOptions(c, false, true, true, $blogid, page[0], page[2], page[5])}
            
        </div>
      </div>
    </div>

    <hr>

    <div>
      # if c.req.cookies.hasKey("rawhtml") and c.req.cookies["rawhtml"] == "true":
        <textarea name="editordata" id="editordataCodemirror">${page[4]}</textarea>
      # else:
        <div id="gjs" class="gls">${page[4]}</div>
        <textarea id="gjshidden" name="editordata" style="display: none"></textarea>
      # end if
    </div>

  </form>   

</div>

<div id="notifySaved">
  Saved blog
</div>
#   end for
# else:
  <h5 style="color: red;">Something went wrong</h5>
# end if

# if c.req.cookies.hasKey("rawhtml") and c.req.cookies["rawhtml"] == "true":
  ${genEditMixed()}
# else:
<script src="https://unpkg.com/grapesjs" defer></script>
<script src="/js/grapesjsbs4.min.js" defer></script>
<script src="/js/grapesjs_custom.js" defer></script>
<script src="/js/editors.js" defer></script>
<link rel="stylesheet" href="https://unpkg.com/grapesjs/dist/css/grapes.min.css" />
<script>
function grapeJsLoadAssets() {
  const am = editor.AssetManager;
  am.add([

# var multiple = false
# for file in walkFiles("public/images/*"):
#   if multiple:
      ,{src: '${replace(file, "public", "")}'}
#   else:
      {src: '${replace(file, "public", "")}'}
#     multiple = true
#   end if
# end for  

  ]);
  am.render();
}
</script>
# end if
#end proc