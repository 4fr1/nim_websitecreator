#? stdtmpl | standard
#
#import httpclient  #HACK: Do NOT move to main,leave it here.
#
#proc genServerInfo(): string =
#  result = ""
<div id="serverinfo">
<h1 class="has-text-centered">Server Info</h1>
<table border=1 class="table is-bordered is-striped is-hoverable is-fullwidth">
  <thead>
    <tr>
      <th>Name</th>
      <th>Value</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <th>Name</th>
      <th>Value</th>
    </tr>
  </tfoot>
  <tbody>
  <tr>
    <td> <b>System</b> </td>            <td>
    # when not defined(demo):
      ${execCmdEx("uname -a").output}
    # else:
      <i> Not available on Demo </i>
    # end when
    </td>
  </tr>
  <tr>
    <td> <b>Distro</b> </td>            <td>
    # when not defined(demo):
      {execCmdEx("lsb_release -a").output}
    # else:
      <i> Not available on Demo </i>
    # end when
    </td>
  </tr>
  <tr>
    <td> <b>Uptime</b> </td>            <td>
    # when not defined(demo):
      ${execCmdEx("uptime --pretty").output}
    # else:
      <i> Not available on Demo </i>
    # end when
    </td>
  </tr>
  <tr>
    <td> <b>Public IP</b> </td>         <td>
    # when not defined(demo):
      ${newHttpClient().getContent("http://api.ipify.org")}
    # else:
      <i> Not available on Demo </i>
    # end when
    </td>
  </tr>
    <tr>
      <td> <b>Disk</b> </td>         <td>
      # when not defined(demo):
        ${execCmdEx("df --human-readable --local --output=avail " & getCurrentDir()).output}
      # else:
        <i> Not available on Demo </i>
      # end when
      </td>
    </tr>
  <tr>
    <td> <b>Hostname</b> </td>          <td>${getHostname()}</td>
  </tr>
  <tr>
    <td> <b>Compile Date</b> </td>      <td>$CompileDate</td>
  </tr>
  <tr>
    <td> <b>Compile Time</b> </td>      <td> $CompileTime</td>
  </tr>
  <tr>
    <td> <b>Nim Version</b> </td>       <td>$NimVersion</td>
  </tr>
  # when not defined(noFirejail):
    <tr>
      <td> <b>Firejail Version</b> </td><td> $firejailVersion </td>
    </tr>
    <tr>
      <td> <b>Firejail Status</b> </td> <td> $firejailFeatures.pretty </td>
    </tr>
  # end when
  <tr>
    <td> <b>Gatabase Version</b> </td>  <td> $gatabaseVersion </td>
  </tr>
  <tr>
    <td> <b>Postgres</b> </td>          <td> $gatabaseIsPostgres </td>
  </tr>
  <tr>
    <td> <b>CPU</b> </td>               <td>$hostCPU.toUpperAscii</td>
  </tr>
  <tr>
    <td> <b>CPU Count</b> </td>         <td>${countProcessors()}</td>
  </tr>
  <tr>
    <td> <b>OS</b> </td>                <td>$hostOS.toUpperAscii</td>
  </tr>
  <tr>
    <td> <b>Endian</b> </td>            <td>$cpuEndian</td>
  </tr>
  <tr>
    <td> <b>Temp Directory</b> </td>    <td>${getTempDir()}</td>
  </tr>
  <tr>
    <td> <b>Current Directory</b> </td> <td>${getCurrentDir()}</td>
  </tr>
  <tr>
    <td> <b>Log File</b> </td>          <td>${defaultFilename()}</td>
  </tr>
  <tr>
    <td> <b>App Directory</b> </td>     <td>${getAppDir()}</td>
  </tr>
  <tr>
    <td> <b>Biggest Integer</b> </td>   <td>$int.high</td>
  </tr>
  <tr>
    <td> <b>Server DateTime</b> </td>   <td>${now()}</td>
  </tr>
  <tr>
    <td> <b>Encoding</b> </td>          <td>${getCurrentEncoding()}</td>
  </tr>
  <tr>
    <td> <b>SSL?</b> </td>              <td>${defined(ssl)}</td>
  </tr>
  <tr>
    <td> <b>ReCaptcha?</b> </td>        <td>$useCaptcha</td>
  </tr>
  <tr>
    <td> <b>No WebP?</b> </td>          <td>${defined(noWebp)}</td>
  </tr>
  <tr>
    <td> <b>Release Build?</b> </td>    <td>${defined(release)}</td>
  </tr>
  <tr>
    <td> <b>Demo Mode?</b> </td>        <td>${defined(demo)}</td>
  </tr>
  <tr>
    <td> <b>Admin Notify?</b> </td>     <td>${defined(adminnotify)}</td>
  </tr>
  <tr>
    <td> <b>Force Recompile?</b> </td>  <td>${defined(rc)}</td>
  </tr>
  <tr>
    <td> <b>Development Mode?</b> </td> <td>${defined(dev)}</td>
  </tr>
  <tr>
    <td> <b>Update from GIT?</b></td>   <td>${defined(gitupdate)}</td>
  </tr>
  <tr>
    <td> <b>Free Memory</b> </td>       <td>${getFreeMem()}</td>
  </tr>
  <tr>
    <td> <b>Total Memory</b> </td>      <td>${getTotalMem()}</td>
  </tr>
  <tr>
    <td> <b>Occupied Memory</b> </td>   <td>${getOccupiedMem()}</td>
  </tr>
  <tr>
    <td> <b>Command Line Params</b> </td>   <td>${commandLineParams()}</td>
  </tr>
  <tr>
    <td> <b>Garbage Collector</b> </td> <td>${GC_getStatistics()}</td>
  </tr>
</tbody>
</table>
</div>
#end proc