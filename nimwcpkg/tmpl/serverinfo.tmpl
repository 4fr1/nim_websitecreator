#? stdtmpl | standard
#
#import httpclient  #HACK: Do NOT move to main,leave it here.
#
#proc genServerInfo(): string =
#  result = ""
#
#
#  let hostn = getHostname()
#  let uptim = execCmdEx("uptime --pretty").output.strip
#  let disks = execCmdEx("df --human-readable --local --output=avail " & getCurrentDir()).output.strip
#  let jailf = when defined(firejail): $firejailFeatures.pretty.strip else: "<i> Firejail is Disabled </i>"
#  const uname = staticExec("uname -a").strip
#  const distr = staticExec("lsb_release -a").strip
#  const jailv = when defined(firejail): $firejailVersion else: "<i> Firejail is Disabled </i>"
#  let pubip = newHttpClient().getContent("http://api.ipify.org").strip
#
#
<div id="serverinfo">
<h1 class="has-text-centered">Server Info</h1>
<table border=1 class="table is-bordered is-striped is-hoverable is-fullwidth">
  <thead>
    <tr>
      <th style="width:200px">Name</th>
      <th>Value</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <th>Name</th>
      <th>Value</th>
    </tr>
  </tfoot>
  <tbody class="is-family-monospace">
  <tr>
    <td> <b>System</b> </td>            <td> $uname </td>
  </tr>
  <tr>
    <td> <b>Distro</b> </td>            <td> $distr </td>
  </tr>
  <tr>
    <td> <b>Uptime</b> </td>            <td> $uptim </td>
  </tr>
  <tr>
    <td> <b>Public IP</b> </td>         <td> $pubip </td>
  </tr>
  <tr>
    <td> <b>Disk</b> </td>              <td> $disks </td>
  </tr>
  <tr>
    <td> <b>Hostname</b> </td>          <td> $hostn </td>
  </tr>
  <tr>
    <td> <b>Compile Date</b> </td>      <td> $CompileDate </td>
  </tr>
  <tr>
    <td> <b>Compile Time</b> </td>      <td> $CompileTime </td>
  </tr>
  <tr>
    <td> <b>Nim Version</b> </td>       <td> $NimVersion </td>
  </tr>
  <tr>
    <td> <b>Firejail Version</b> </td>  <td>  $jailv </td>
  </tr>
  <tr>
    <td> <b>Firejail Status</b> </td>   <td> $jailf </td>
  </tr>
  <tr>
    <td> <b>CPU</b> </td>               <td> $hostCPU.toUpperAscii </td>
  </tr>
  <tr>
    <td> <b>CPU Count</b> </td>         <td>${countProcessors()}</td>
  </tr>
  <tr>
    <td> <b>OS</b> </td>                <td>$hostOS.toUpperAscii</td>
  </tr>
  <tr>
    <td> <b>Endian</b> </td>            <td>$cpuEndian</td>
  </tr>
  <tr>
    <td> <b>Temp Directory</b> </td>    <td>${getTempDir()}</td>
  </tr>
  <tr>
    <td> <b>Current Directory</b> </td> <td>${getCurrentDir()}</td>
  </tr>
  <tr>
    <td> <b>Log File</b> </td>          <td>${defaultFilename()}</td>
  </tr>
  <tr>
    <td> <b>App Directory</b> </td>     <td>${getAppDir()}</td>
  </tr>
  <tr>
    <td> <b>Biggest Integer</b> </td>   <td>$int.high</td>
  </tr>
  <tr>
    <td> <b>Server DateTime</b> </td>   <td>${now()}</td>
  </tr>
  <tr>
    <td> <b>Encoding</b> </td>          <td>${getCurrentEncoding()}</td>
  </tr>
  <tr>
    <td> <b>SSL enabled</b> </td>       <td>${defined(ssl)}</td>
  </tr>
  <tr>
    <td> <b>ReCaptcha enabled</b> </td> <td>$useCaptcha</td>
  </tr>
  <tr>
    <td> <b>WebP enabled</b> </td>      <td>${defined(webp)}</td>
  </tr>
  <tr>
    <td> <b>Release Build</b> </td>    <td>${defined(release)}</td>
  </tr>
  <tr>
    <td> <b>Demo Mode enabled</b> </td> <td>${defined(demo)}</td>
  </tr>
  <tr>
    <td> <b>Admin Notify enabled</b> </td><td>${defined(adminnotify)}</td>
  </tr>
  <tr>
    <td> <b>Force Recompile enabled</b> </td>  <td>${defined(rc)}</td>
  </tr>
  <tr>
    <td> <b>Development Mode enabled</b> </td> <td>${defined(dev)}</td>
  </tr>
  <tr>
    <td> <b>Update from GIT enabled</b></td>   <td>${defined(gitupdate)}</td>
  </tr>
  <tr>
    <td> <b>Free Memory</b> </td>       <td>${getFreeMem()}</td>
  </tr>
  <tr>
    <td> <b>Total Memory</b> </td>      <td>${getTotalMem()}</td>
  </tr>
  <tr>
    <td> <b>Occupied Memory</b> </td>   <td>${getOccupiedMem()}</td>
  </tr>
  <tr>
    <td> <b>Garbage Collector</b> </td> <td>${GC_getStatistics()}</td>
  </tr>
</tbody>
</table>
</div>

#end proc
