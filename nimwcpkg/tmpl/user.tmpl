#? stdtmpl | standard
#
#template `%`(idx: untyped): untyped =
#  row[idx]
#end template
#
#
#proc genFormLogin(c: var TData, errorMsg = ""): string =
# result = ""
# if not c.loggedIn:
#
#   let standardElements = getRow(db, sql"SELECT head, navbar, footer FROM settings WHERE id = ?", "1")

<head>
  ${standardElements[0]}
</head>

  <div id="login" class="box">

    <form name="login" action="/dologin" method="POST">

      # when defined(demo):
        <div class="notification is-link">
          <p><b>User:</b> test@test.com</p>
          <p><b>Pass:</b> test</p>
        </div>
      # end when

      <div class="notification is-danger" style="text-align: center;font-size: 1.2rem; line-height: 1.8rem;"><b>$errorMsg</b></div>

      <div class="field">
        <label class="label">Email</label>
        <div class="control has-icons-left has-icons-right">
          <input type="email" class="form-control input is-primary is-large is-rounded" name="email" placeholder="Email" minlength="5" required autofocus
          # when defined(demo):
            value="test@test.com"
          # end when
          >
        </div>
      </div>
      <div class="field">
        <label class="label">Password</label>
        <div class="control has-icons-left has-icons-right">
          <input type="password" class="form-control input is-primary is-large is-rounded" name="password" autocomplete="current-password" minlength="4" placeholder="Password" required
          # when defined(demo):
            value="test"
          # end when
          >
        </div>
      </div>

      <input href="#" type="submit" class="btn btn-custom btn-blue-secondary button is-primary is-large is-fullwidth is-rounded" value="Login" />

      #if useCaptcha:
        <div id="recaptcha">
          <div class="g-recaptcha" data-sitekey="${recaptchaSiteKey}" data-theme="light" style="transform:scale(0.93);-webkit-transform:scale(0.93);transform-origin:0 0;-webkit-transform-origin:0 0;"></div>
          <script src="https://www.google.com/recaptcha/api.js" async defer></script>
        </div>
      #end if
    </form>
  </div>

  <footer>
    ${standardElements[2]}
  </footer>

  #else:
    <div class="notification is-danger" style="text-align: center">
      <h1>You are already logged in!</h1>
    </div>
  #end if
#end proc
#
#
#
#
#
#
#proc genUsers(c: var TData): string =
# result = ""
#
# let allUsers = getAllRows(db, sql"SELECT id, name, email, status, lastOnline, secretUrl FROM person")

<div style="text-align: center;">
  <h1>Users</h1>
</div>

<div id="users">

# if c.rank in [Admin, Moderator]:
  <div id="usersAddContainer">
    <button class="btn btn-secondary usersAdd">Add new user</button>
    <form id="usersAdd" method="post" action="/users/add">
      <div>
        <label>Name</label>
        <input type="text" name="name" required value="" />
      </div>
      <div>
        <label>Email</label>
        <input type="email" name="email" required value="" />
      </div>
      <div style="display: inline-flex;">
        <label>Status</label>
        <select name="status" class="form-control form-control-sm">
          <option value="User" selected>User</option>
          <option value="Moderator">Moderator</option>
          # if c.rank == Admin:
          <option value="Admin">Admin</option>
          #end if
        </select>
      </div>

      <button type="submit" class="btn btn-success userDoAdd">Add user</button>
    </form>
  </div>
# end if


<ul class="list-group">
# for user in allUsers:
#   when defined(demo):
#     if user[3] == "Admin":
#       continue
#     end if
#   end when
  <li class="list-group-item d-flex justify-content-between align-items-center">
    <span>${user[1]} - ${user[2]}</span>
    <div>
#   if user[5] == "":
      <span class="badge badge-seconday badge-pill">Last online: ${epochDate(user[4], "YYYY-MM-DD HH:mm")}</span>
      <span class="badge badge-primary badge-pill">${user[3]}</span>
#   else:
      <span class="badge badge-primary badge-pill">Email not confirmed</span>
#   end if
      <span class="badge badge-danger badge-pill"><a class="delete" href="/users/delete/${user[0]}">Delete</a></span>
    </div>
  </li>
# end for
</ul>

</div>

#end proc
#
#
#
#
#
#
#proc genUsersProfile(c: var TData): string =
# result = ""
#
# let userData = getAllRows(db, sql"SELECT id, name, email, status, lastOnline FROM person WHERE id = ?", c.userid)

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropper/3.1.4/cropper.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropper/3.1.4/cropper.min.js" defer></script>

<div style="text-align: center;">
  <h1>Profile</h1>
</div>

<div id="user">

# for user in userData:

  <div class="container-fluid">
    <div class="row">
      <div class="col-12 col-md-6">

        <form method="POST" action="/users/profile/update" style="background: white; padding: 10px; border: 1px solid grey; border-radius: 4px;">
          <div class="input-group input-group-sm" style="margin-bottom: 10px;">
            <div class="input-group-prepend">
              <span class="input-group-text" style="width: 80px;">
                  Name<span style="color: red;font-weight: 600;">*</span>
              </span>
            </div>
            <input id="name" name="name" type="text" class="form-control" required value="${user[1]}">
          </div>

          <div class="input-group input-group-sm" style="margin-bottom: 10px;">
            <div class="input-group-prepend">
              <span class="input-group-text" style="width: 80px;">
                  Email<span style="color: red;font-weight: 600;">*</span>
              </span>
            </div>
            <input id="email" name="email" type="email" class="form-control" required value="${user[2]}">
          </div>

          <div class="input-group input-group-sm" style="margin-bottom: 10px;">
            <div class="input-group-prepend">
              <span class="input-group-text" style="width: 80px;">
                Password
              </span>
            </div>
            <input id="password" name="password" type="password" class="form-control" required value="">
          </div>

          <div class="input-group input-group-sm" style="margin-bottom: 10px;">
            <div class="input-group-prepend">
              <span class="input-group-text" style="width: 80px;">
                Password
              </span>
            </div>
            <input id="passwordConfirm" name="passwordConfirm" type="password" class="form-control" required placeholder="Confirm password" value="">
          </div>

          <div class="input-group input-group-sm" style="margin-bottom: 10px;">
            <div class="input-group-prepend">
              <span class="input-group-text" style="width: 80px;">
                Status
              </span>
            </div>
            <input type="text" class="form-control" disabled="disabled" value="${user[3]}">
          </div>

          <div class="save">
            <button type="submit" class="btn btn-success save">Save</button>
          </div>
        </form>

      </div>

      <div class="col-12 col-md-6">

        <div id="editProfilePhoto">
          <div id="userPictureDialogInside">
            <div class="alert alert-success alert-dismissible fade show" role="alert" style="display: none;">
              <strong>Saved!</strong> Your profile picture was saved.
              <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>

            <button id="userPictureSave" class="btn btn-custom btn-blue-primary" style="display: none;">Save picture</button>
            <button id="userPictureNewdata" class="btn btn-custom btn-blue-primary">Upload new picture</button>
            <br><br>
            # if fileExists(storageEFS & "/users/" & c.userid & ".png"):
              <img id="userPictureEdit" src="/users/photo/stream/${c.userid}.png" style="max-width: 100%;">
            # else:
              <img id="userPictureEdit" src="/images/avatar.jpg" style="max-width: 100%;">
            # end if

            <div style="display: none;">
              <input type="file" id="userPictureEditTemp" />
            </div>

          </div>
        </div>

      </div>
    </div>
  </div>

# end for


</div>

#end proc
