#? stdtmpl | standard
#
#template `%`(idx: untyped): untyped =
#  row[idx]
#end template
#
#
#
#
#  
#proc genSettings(c: var TData): string =
  #result = ""

  <div style="text-align: center;">
    <h1>Settings</h1>
  </div>

  <div id="settings">
    <div class="container-fluid">
      <div class="row">
        <div class="col-12 col-md-6">

          <h5 style="text-align: center;">Blog</h5>
          <div>
            <a href="/blogpagenew" class="btn btn-outline-primary">Add blogpost</a>
          </div>
          <div>
            <a href="/editpage/blogallpages" class="btn btn-outline-primary">Edit blogpost</a>
          </div>
          
          <br>

          <h5 style="text-align: center;">Pages</h5>
          <div>
            <a href="/pagenew" class="btn btn-outline-primary">Add page</a>
          </div>
          <div>
            <a href="/editpage/allpages" class="btn btn-outline-primary">Edit pages</a>
          </div>

          <br>

          <h5 style="text-align: center;">Plugins</h5>
          <div>
            <a href="/plugins" class="btn btn-outline-primary">Plugins</a>
          </div>
          <div>
            <a href="/plugins/repo" class="btn btn-outline-primary">Plugins repo</a>
          </div>

          <br>

        </div>

        <div class="col-12 col-md-6">

          <h5 style="text-align: center;">Users</h5>
          <div>
            <a href="/users" class="btn btn-outline-primary">Users</a>
          </div>
          <div>
            <a href="/users/profile" class="btn btn-outline-primary">My profile</a>
          </div>

          <br>

          <h5 style="text-align: center;">Files</h5>
          <div>
            <a href="/files" class="btn btn-outline-primary">Files</a>
          </div>

          <br>
          
          <h5 style="text-align: center;">Settings</h5>
          <div>
            <a href="/settings/edit" class="btn btn-outline-primary">Edit HTML</a>
          </div>
          <div>
            <a href="/settings/editjs" class="btn btn-outline-primary">Edit core JS file</a>
          </div>
          <div>
            <a href="/settings/editjscustom" class="btn btn-outline-primary">Edit custom JS file</a>
          </div>
          <div>
            <a href="/settings/editcss" class="btn btn-outline-primary">Edit core CSS file</a>
          </div>
          <div>
            <a href="/settings/editcsscustom" class="btn btn-outline-primary">Edit custom CSS file</a>
          </div>

          <br>

        </div>
      </div>
    </div>
  </div>

#end proc
#
#
#
#
#
#proc genSettingsEdit(c: var TData): string =
# result = ""
#
# let pageData = getAllRows(db, sql"SELECT analytics, head, navbar, footer, title FROM settings WHERE id = ?", "1")
#
# for page in pageData:

<div id="settingsEdit">
  <h1>HTML elements</h1>
  <p>The HEAD, NAVBAR and FOOTER block will be inserted on all your pages. You can disable them for individual pages/blogposts when you are editing them. To completely disable them - delete their content below.</p>
  <hr>
  <form class="standard settings" method="post" action="/settings/update">
    <div>
      <label>Title</label>
      <input name="title" id="title" required value="${page[4]}" />
    </div>
    <div style="display: inline-flex;">
      <div>
        <button type="submit" class="btn btn-success settingsSave">Save</button>
      </div>
      <div>
        <button type="button" class="btn btn-secondary templateCode">See template</button>
      </div>
      <div>
        <button type="button" class="btn btn-danger settingsRestore">Restore</button>
      </div>
    </div>
    <hr>
    <div>
      <div>HTML &lt;head&gt;</div>
      <a href="#!" class="templateCode" data-code="head" style="display: none;">See template</a>
      <pre class="templateCode templateCodehead" style="display: none;">${xmlEncode(head)}</pre>
      <textarea name="head" id="htmlSettings1">${page[1]}</textarea>
    </div>
    <br>
    <div>
      <div>HTML &lt;header&gt; + &lt;navbar&gt;</div>
      <a href="#!" class="templateCode" data-code="navbar" style="display: none;">See template</a>
      <pre class="templateCode templateCodenavbar" style="display: none;">${xmlEncode(navbar)}</pre>
      <textarea name="navbar" id="htmlSettings2">${page[2]}</textarea>
    </div>
    <br>
    <div>
      <div>HTML &lt;footer&gt;</div>
      <a href="#!" class="templateCode" data-code="footer" style="display: none;">See template</a>
      <pre class="templateCode templateCodefooter" style="display: none;">${xmlEncode(footer)}</pre>
      <textarea name="footer" id="htmlSettings3">${page[3]}</textarea>
    </div>
    <div style="display: inline-flex;">
      <div>
        <button type="submit" class="btn btn-success settingsSave">Save</button>
      </div>
      <div>
        <button type="button" class="btn btn-danger settingsRestore">Restore</button>
      </div>
    </div>
  </form>   
  
</div>

<div id="notifySaved">
  Saved HTML
</div>
# end for
#end proc
#
#
#
#
#
#proc genSettingsEditJs(c: var TData, customJs: bool): string =
# result = ""
# var jsFile: string
# if customJs:
#   jsFile = "public/js/js_custom.js"
# else:
#   jsFile = "public/js/js.js"
# end if
<style>
  .CodeMirror {
    border: 1px solid #eee;
    height: auto!important;
  }
</style>
<div id="settingsEdit">
  <h1>Edit JS file</h1>
  <h4>${jsFile}</h4>
  <form class="standard settings" method="post" action="/settings/updatejs">
    <input name="customJs" value="${customJs}" style="display: none">
    <div>
      <button type="submit" class="btn btn-success settingsSaveCode" style="margin-bottom: 5px;">Save</button>
    </div>
    <div>
      <textarea name="js" id="settingsCode" >
# for line in lines(jsFile):
$line
# end for
      </textarea>
    </div>
    <div>
      <button type="submit" class="btn btn-success settingsSaveCode">Save</button>
    </div>
  </form>   
</div>

<div id="notifySaved">
  Saved ${jsFile}
</div>
#end proc
#
#
#
#
#
#proc genSettingsEditCss(c: var TData, customCss: bool): string =
# result = ""
# var cssFile: string
# if customCss:
#   cssFile = "public/css/style_custom.css"
# else:
#   cssFile = "public/css/style.css"
# end if
<style>
  .CodeMirror {
    border: 1px solid #eee;
    height: auto!important;
  }
</style>
<div id="settingsEdit">
  <h1>Edit CSS file</h1>
  <h4>${cssFile}</h4>
  <form class="standard settings" method="post" action="/settings/updatecss">
    <input name="customCss" value="${customCss}" style="display: none">
    <div>
      <button type="submit" class="btn btn-success settingsSaveCode" style="margin-bottom: 5px;">Save</button>
    </div>
    <div>
      <textarea name="css" id="settingsCode" >
# for line in lines(cssFile):
$line
# end for
      </textarea>
    </div>
    <div>
      <button type="submit" class="btn btn-success settingsSaveCode">Save</button>
    </div>
  </form>   
</div>

<div id="notifySaved">
  Saved ${cssFile}
</div>
#end proc